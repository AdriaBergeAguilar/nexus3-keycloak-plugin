# https://github.com/vouch/vouch-proxy#installation
server {
    listen 88;
    server_name 172.17.0.1;

    error_log  /var/log/nginx/error.log debug;
    access_log /var/log/nginx/error.log main;

    # send all requests to the `/validate` endpoint for authorization
    auth_request /validate;

    location = /validate {
        proxy_cache off;
        # forward the /validate request to Vouch Proxy
        proxy_pass http://172.17.0.1:9090/validate;

        # be sure to pass the original host header
        proxy_set_header Host $http_host;

        # Vouch Proxy only acts on the request headers
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        # these return values are used by the @error401 call
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    }

    # if validate returns `401 not authorized` then forward the request to the @error401 block
    error_page 401 = @error401;

    location @error401 {
        # redirect to Vouch Proxy for login
        return 302 http://172.17.0.1:9090/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
    }

    # proxy pass authorized requests to your service
    location / {
        # proxy_intercept_errors on;
        # Note: $auth_resp_x_vouch_user actually is the user's email,
        #      the $auth_resp_x_vouch_username is the real user name
        auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;
        auth_request_set $auth_resp_x_vouch_username $upstream_http_x_vouch_idp_claims_preferred_username;
        auth_request_set $auth_resp_x_vouch_idp_accesstoken $upstream_http_x_vouch_idp_accesstoken;

        proxy_set_header Host $http_host;
        proxy_set_header X-Keycloak-Sec-Auth $auth_resp_x_vouch_user:$auth_resp_x_vouch_idp_accesstoken;
        proxy_hide_header X-Remote-User-Access-Token;

        client_max_body_size 500M;
        # Disable cache of assets
        proxy_cache            off;
        proxy_read_timeout     600;
        proxy_connect_timeout  600;

        proxy_pass http://172.17.0.1:8903;

        # Just for debugging, you may not want it
        # access_by_lua_block {
        #     ngx.log(ngx.DEBUG, 'auth_resp_x_vouch_user: '..(ngx.var.auth_resp_x_vouch_user or '')..', auth_resp_x_vouch_idp_accesstoken: '..(ngx.var.auth_resp_x_vouch_idp_accesstoken or ''))
        # }
    }
}
